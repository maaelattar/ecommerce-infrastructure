#!/bin/bash

# =============================================================================
# ðŸš€ Ecommerce Infrastructure - One Command to Rule Them All
# =============================================================================

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

log() { echo -e "${GREEN}âœ“${NC} $1"; }
warn() { echo -e "${YELLOW}âš ${NC} $1"; }
error() { echo -e "${RED}âœ—${NC} $1"; }
header() { echo -e "\n${CYAN}ðŸš€ $1${NC}"; }

show_help() {
    echo "Ecommerce Infrastructure - AWS-Native Development"
    echo ""
    echo "Usage:"
    echo "  ./dev           Start everything (LocalStack + CDK)"
    echo "  ./dev stop      Stop everything" 
    echo "  ./dev status    Show status"
    echo "  ./dev logs      Show logs"
    echo "  ./dev clean     Clean restart"
    echo ""
}

start_infrastructure() {
    header "Starting AWS-Native Infrastructure"
    
    cd "$(dirname "$0")"
    
    # Basic checks
    if ! command -v docker &> /dev/null; then
        error "Docker not found. Install from https://docker.com"
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        error "Docker not running. Start Docker Desktop."
        exit 1
    fi
    
    log "Starting LocalStack..."
    docker-compose --profile core up -d    
    log "Waiting for LocalStack to be ready..."
    
    # Wait for LocalStack to be healthy
    for i in {1..30}; do
        if curl -s http://localhost:4566/_localstack/health > /dev/null; then
            log "LocalStack ready at http://localhost:4566"
            break
        fi
        if [ $i -eq 30 ]; then
            error "LocalStack failed to start after 30 attempts"
            exit 1
        fi
        sleep 2
    done
    
    # Deploy CDK infrastructure
    header "Deploying CDK Infrastructure"
    cd "$(dirname "$0")/../aws"
    
    # Install CDK dependencies if needed
    if [ ! -d "node_modules" ]; then
        log "Installing CDK dependencies..."
        pnpm install
    fi
    
    # Bootstrap LocalStack environment if needed
    log "Bootstrapping CDK environment..."
    cdklocal bootstrap --quiet || true
    
    # Deploy infrastructure
    log "Deploying infrastructure to LocalStack..."
    cdklocal deploy --context environment=local --require-approval never
    
    cd "$(dirname "$0")"
    
    echo ""
    echo "ðŸŽ‰ Infrastructure ready!"
    echo "   LocalStack: http://localhost:4566"
    echo "   CDK Stack:  Deployed"
    echo ""
    echo "Run './dev status' to check health"
}

stop_infrastructure() {
    header "Stopping Infrastructure"
    cd "$(dirname "$0")"
    docker-compose --profile core down
    log "Infrastructure stopped"
}

show_status() {
    header "Infrastructure Status"
    cd "$(dirname "$0")"
    docker-compose --profile core ps
    
    echo ""
    if curl -s http://localhost:4566/_localstack/health > /dev/null; then
        log "LocalStack is healthy"
    else
        warn "LocalStack not responding"
    fi
}

show_logs() {
    cd "$(dirname "$0")"
    docker-compose --profile core logs -f
}

clean_restart() {
    header "Clean Restart"
    cd "$(dirname "$0")"
    docker-compose --profile core down -v --remove-orphans
    log "Cleaned up everything"
    start_infrastructure
}



# Main logic
case "${1:-}" in
    ""|"start") start_infrastructure ;;
    "stop") stop_infrastructure ;;
    "status") show_status ;;
    "logs") show_logs ;;
    "clean") clean_restart ;;
    "help"|"-h"|"--help") show_help ;;
    *) echo "Unknown command: $1"; show_help; exit 1 ;;
esac